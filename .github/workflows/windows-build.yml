name: Windows Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build Windows Executable
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Generate icons
      run: |
        python generate_icons.py

    - name: Verify assets exist
      run: |
        if (!(Test-Path "assets\icon.png")) {
          Write-Error "Icon file not found!"
          exit 1
        }
        if (!(Test-Path "assets\icon_alert.png")) {
          Write-Error "Alert icon file not found!"
          exit 1
        }
      shell: pwsh

    - name: Build with PyInstaller
      run: |
        pyinstaller PowerMonitor.spec

    - name: Verify build output
      run: |
        if (!(Test-Path "dist\PowerMonitor\PowerMonitor.exe")) {
          Write-Error "Build failed - executable not found!"
          exit 1
        }
        Write-Host "Build successful!"
        Get-ChildItem dist\PowerMonitor
      shell: pwsh

    - name: Get version from tag or commit
      id: version
      run: |
        if ($env:GITHUB_REF -match 'refs/tags/v(.*)') {
          $version = $matches[1]
        } else {
          $version = "${{ github.sha }}".Substring(0,7)
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "Version: $version"
      shell: pwsh

    - name: Create artifact archive
      run: |
        Compress-Archive -Path dist\PowerMonitor\* -DestinationPath PowerMonitor-Windows-${{ steps.version.outputs.VERSION }}.zip
      shell: pwsh

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: PowerMonitor-Windows-${{ steps.version.outputs.VERSION }}
        path: PowerMonitor-Windows-${{ steps.version.outputs.VERSION }}.zip
        retention-days: 30

    - name: Upload to release (if tagged)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: PowerMonitor-Windows-${{ steps.version.outputs.VERSION }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-status:
    name: Build Status Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
    - name: Report build status
      run: |
        if [ "${{ needs.build.result }}" == "success" ]; then
          echo "✅ Windows build completed successfully!"
        else
          echo "❌ Windows build failed!"
          exit 1
        fi
